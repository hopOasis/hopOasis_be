spring.datasource.url=jdbc:mysql://localhost:3306/hop_oasis
spring.datasource.password=oasis
spring.datasource.username=oasis
aws.access.key=${AWS_ACCESS_KEY_BUCKET}
aws.secret.key=${AWS_SECRET_KEY_BUCKET}
aws.s3.bucket=${AWS_S3_BUCKET}
special.jwt.value=${SPECIAL_JWT_VALUE}
special.time.value=${SPECIAL_TIME_VALUE}
spring.security.oauth2.client.registration.google.clientId=${REGISTRATION_GOOGLE_CLIENTID}
spring.security.oauth2.client.registration.google.clientSecret=${REGISTRATION_GOOGLE_CLIENT_SECRET}
#redirect-uri will be change when we will have deploy frontend part
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:4200/auth/login
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.response-type=code
spring.security.google-oauth-url=https://accounts.google.com/o/oauth2/v2/auth?client_id=%s&redirect_uri=%s&response_type=%s&scope=%s&state=%s&access_type=%s
spring.security.scope=email profile
spring.security.state=random_string_for_csrf_protection
spring.security.access-type=offline
spring.jpa.hibernate.ddl-auto=update