name: Deploy to AWS Lambda

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - add-graalvm-support
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Validate Liquibase Migrations
        uses: liquibase-github-actions/validate@v4.29.0
        with:
          url: ${{ secrets.DATABASE_URL }}
          username: ${{ secrets.DATABASE_USERNAME }}
          password: ${{ secrets.DATABASE_PASSWORD }}
          changeLogFile: 'src/main/resources/db/changelog/db.changelog-master.yaml'
          logLevel: info
        env:
          JAVA_HOME: ${{steps.setup-java.outputs.java-home}}
          INSTALL_MYSQL: true

      - name: Liquibase Status
        uses: liquibase-github-actions/status@v4.29.0
        with:
          url: ${{ secrets.DATABASE_URL }}
          username: ${{ secrets.DATABASE_USERNAME }}
          password: ${{ secrets.DATABASE_PASSWORD }}
          changeLogFile: 'src/main/resources/db/changelog/db.changelog-master.yaml'
          logLevel: info
        env:
          JAVA_HOME: ${{steps.setup-java.outputs.java-home}}
          INSTALL_MYSQL: true

  build-push:
    runs-on: ubuntu-latest
    needs: validate
    env:
      IMAGE_NAME: hop_oasis_be
      IMAGE_TAG: latest
    steps:
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set lower case owner name
        env:
          OWNER: '${{ github.repository_owner }}'
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}

      - name: Set FULL_IMAGE_NAME
        run: echo "FULL_IMAGE_NAME=ghcr.io/${{ env.OWNER_LC }}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build native image
        run: mvn -Pnative clean spring-boot:build-image -Dspring-boot.build-image.imageName=${{ env.FULL_IMAGE_NAME }}

      - name: Push the image
        run: docker push ${{ env.FULL_IMAGE_NAME }}

  configure-deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Set up AWS SAM CLI
        uses: aws-actions/setup-sam@v1

      - name: Package SAM application
        run: |
          sam package \
            --template-file template.yml \
            --output-template-file packaged.yml \
            --s3-bucket hop-be-lambda-builds

      - name: Update Liquibase Migrations
        uses: liquibase-github-actions/update@v4.29.0
        with:
          url: ${{ secrets.DATABASE_URL }}
          username: ${{ secrets.DATABASE_USERNAME }}
          password: ${{ secrets.DATABASE_PASSWORD }}
          changeLogFile: 'src/main/resources/db/changelog/db.changelog-master.yaml'
          logLevel: info
          showSummary: 'summary'
        env:
          JAVA_HOME: ${{steps.setup-java.outputs.java-home}}
          INSTALL_MYSQL: true

      - name: Deploy SAM application
        run: |
          sam deploy \
            --template-file packaged.yml \
            --stack-name hop-be-stack \
            --capabilities CAPABILITY_IAM \
            --region eu-central-1

  send-email:
    runs-on: ubuntu-latest
    needs: configure-deploy
    steps:
      - name: Check commit message for keywords
        id: check_message
        run: |
          if git log -1 --pretty=%B | grep -q -E "feature|bugfix|fix|refactor|update"; then
           echo "send_email=true" >> $GITHUB_ENV
          else
           echo "send_email=false" >> $GITHUB_ENV
          fi      

      - name: Send email notification
        if: env.send_email == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "Branch 'dev' has been updated"
          body: "The 'dev' branch has been updated. Please review the changes."
          to: "roananik1988@gmail.com,anna2511xxx@gmail.com,oksana.mixulya.88@gmail.com,denzava30@gmail.com"
          from: ${{ secrets.EMAIL_USERNAME }}
